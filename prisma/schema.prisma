generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  name          String?
  fitnessGoals  String[]
  workoutPlans  WorkoutPlan[]
  nutritionPlans NutritionPlan[]
  conversations Conversation[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model WorkoutPlan {
  id          String    @id @default(uuid())
  userId      String
  name        String
  exercises   Exercise[]
  duration    Int       // in minutes
  difficulty  String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Exercise {
  id            String    @id @default(uuid())
  workoutPlanId String
  name          String
  sets          Int
  reps          Int
  videoUrl      String?
  instructions  String
  workoutPlan   WorkoutPlan @relation(fields: [workoutPlanId], references: [id])
}

model NutritionPlan {
  id          String    @id @default(uuid())
  userId      String
  name        String
  meals       Meal[]
  calories    Int
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Meal {
  id              String    @id @default(uuid())
  nutritionPlanId String
  name            String
  foods           Food[]
  nutritionPlan   NutritionPlan @relation(fields: [nutritionPlanId], references: [id])
}

model Food {
  id          String    @id @default(uuid())
  mealId      String
  name        String
  calories    Int
  protein     Float
  carbs       Float
  fats        Float
  meal        Meal      @relation(fields: [mealId], references: [id])
}

model Conversation {
  id          String    @id @default(uuid())
  userId      String
  messages    Message[]
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Message {
  id              String    @id @default(uuid())
  conversationId  String
  content         String
  role            String    // 'user' or 'assistant'
  conversation    Conversation @relation(fields: [conversationId], references: [id])
  createdAt       DateTime  @default(now())
} 